<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label6.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABGdBTUEAALGPC/xhBQAAAHZJREFUOE/t
        0jkKgDAQheE5iJVbY+sBYtT7Q/A+z0zMgIVLlkYhHwxkgZ8UoeKvZvS0ovO7TBMG0jBueJ1FYbShzb2O
        h9d8luQcE8nRq5iIjj7FRHA0JCZeozExcRs9LtK+hXwrhdafWAoVLaj9Lp5G4xrFFxHt9KJUYbGYCRwA
        AAAASUVORK5CYII=
</value>
  </data>
  <data name="khuyenmailbl.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABGdBTUEAALGPC/xhBQAAAHhJREFUOE/t
        0j0KgDAMhuGcxMGfydUDaNH7g3if2Gg+USz2x0Whz9ZgXhxC2VeNXFDPtb7iTdxsjYMMDM80cKuTcLIj
        u9K42KOL/dNOJ37yrezcYhAT9cYgJBocg6dodAxc0eQYnKOvY4CzSD0rJ8OVPdxSX9m/EK0XvlRujU+Y
        ZgAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="label4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAABGdBTUEAALGPC/xhBQAAAqxJREFUSEvF
        Vt+rTUEUPn6nyI9uIR68efBMhCjFg4iEKH+CdyV1lYQ4woPun2CXbjNzHBfllLv37H1mz3E513FD1PXr
        RvIixdP2rbmr7Rxnzr3nOrd8NU3ft9aamT1rzcwu/Hdk/dncVMW7UqmLaCaV0Tv037ivpiK6aqTeSX4c
        MjNYFe1JhR7BYM8wWL9VyfZ4MF5fLw2voJ446anSdfjUjNK7OXR6VCqV+UbG1xE4lor4AMsdkWXZHKv0
        QUz4EjHFIAjmsckPmgArK8H5XijCpSx3BRvYZYi7jyZpHJbbge25RRNM6TQF7IBdgEU+RLvJUiusiPZZ
        qV/Rilj6J1DOsNA3lFOWJkH7CMNzo+L9LPWEqtKHqCBaqo7K1Mr4KSWRpRyNoLIEC3gL+ymWHFDGh6GP
        jwxWlrOUg8aBbbRWCnew5AJuoEJOM21DVUVbEfTDyHAj8aScrAP/iurb5hw8SGV8Bj7XmJKgrZHRJqZe
        IOgitiBxFSijB1jUBTZ5UZPhFoxrmLpJJhKRrGLqhQ70Yvi94Oqpvy6XF7HJC3vn8Rr4f2TqJvnVCBoL
        mXYEvuAkfDPKB0sdQYuA70+mCFb6E83M1Iv8S7BV6J/QmWCTF1rptTgSH5i6L+kiJygOqW+7S1NGw2jn
        2eRFW05wPq5Yoc8ybUOtpPciYMIq20c8FeEG8O/Ygc3OwYPJyzO6xJS2q/M5oXOA6+Y9FnGEJQcqeUw0
        RtvIUg7vOWFR4/Y9ylJPwAJOYLyQ6R/QezCbdxc9Ziy1AsaiEXqo51tY6MsstSN/T+Coh/RKlrsCFQVy
        +wjJFt09XChXfNU4qu6Yrxiawfk8jhh696d/GZuRv/H0hlM54jI0d81qslFPHDk8h4FH0Wb2xjfjr7+V
        GtoXtAxJ/ex4r38rs4dC4TeHlS4qZje1DwAAAABJRU5ErkJggg==
</value>
  </data>
</root>