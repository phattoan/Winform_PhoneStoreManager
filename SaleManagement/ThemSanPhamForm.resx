<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        APkAAAB9AAAAAAAAAAAAAAAAAAAAAAAAAAsAAAC4AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADtAAAAvgAA
        ANwAAAD2AAAATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlwAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAABuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADuAAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD5AAAAxgAAAJoAAAB2AAAAXgAAAEgAAAA5AAAAMwAAADsAAABKAAAAYAAAAHsAAACgAAAAzAAA
        APwAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAM0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAD/AAAA/wAA
        APgAAACrAAAAUwAAAA0AAAAAAAAAEwAAADQAAABWAAAAZgAAAHYAAAB3AAAAcwAAAGYAAABRAAAAMAAA
        AA4AAAAAAAAAEwAAAF0AAAC3AAAA/AAAAP8AAAD/AAAA4QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAA
        APYAAACEAAAAFgAAAA4AAABcAAAAogAAAN4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/gAAANYAAACaAAAAUAAAAAgAAAAhAAAAlQAAAPwAAADhAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAADQAAAAJQAAABwAAACaAAAA9wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA8gAAAIkAAAASAAAANQAAAMIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAA0AAABfAAAA9AAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAOoAAABHAAAADQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAARwAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        APkAAAAvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADTAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAALEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO0AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAAzQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAogAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAACBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARAAAA0AAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAuwAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAALAAAAlgAAAPkAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA8wAAAIIAAAAEAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAHQAAAIIAAADfAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA1AAAAHYAAAATAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAArAAAAZwAAAJsAAAC8AAAA3gAA
        AO4AAADuAAAA7gAAAO4AAADuAAAA2QAAALgAAACVAAAAXwAAACMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/+AAD/wP/8+AD//OAAf/2AAB/zgAAHxwAPA58H//OfHgAH33AA
        B8/AAA/vgAAP7wAAD+8B/8/vDwAP7zgAD+/gAAefgAAAPwAAAD8Af8AfB//8HxwABx9gAADfwAAAf4AA
        AD8AAAAfAAAAHwAAAB+AAAA/wAAAf/AAA///AB//
</value>
  </data>
</root>